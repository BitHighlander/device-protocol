syntax = "proto2";

// Sugar for easier handling in Java
option java_package = "com.keepkey.deviceprotocol";
option java_outer_classname = "KeepKeyMessageCosmos";

import "types.proto";

/**
 * Request: Address at the specified index
 * @start
 * @next CosmosAddress
 */
message CosmosGetAddress {
    repeated uint32 address_n = 1;  // BIP-32 path. For compatibility with other wallets, must be m/44'/148'/index'
    optional bool show_display = 2; // optionally show on display before sending the result
}

/**
 * Response: Address for the given index
 * @end
 */
message CosmosAddress {
    optional string address = 1;    // Address Bech32 encoded with 'cosmos' prefix
}

/**
 * Request: ask device to sign Cosmos transaction
 * @start
 * @next CosmosSignedTx
 */
message CosmosSignTx {
    repeated uint32 address_n = 1;          // BIP-32 path. For compatibility with other wallets, must be m/44'/118'/index'
    required uint64 account_number = 2;
    required string chain_id = 3;
    required uint32 fee_amount = 4;
    required uint32 gas = 5;
    required string from_address = 6;
    required string to_address = 7;
    required uint64 amount = 8;
    required string memo = 9;
    required uint64 sequence = 10;
}

/**
 * Response: signature for transaction
 * @end
 */
message CosmosSignedTx {
    optional bytes public_key = 1;  // public key for the private key used to sign data
    optional bytes signature = 2;   // signature suitable for sending to the Cosmos network
}
